"""add admin user

Revision ID: 3539d79a1c0b
Revises: be1c8e33b37e
Create Date: 2019-04-15 22:16:24.544765

"""
from alembic import op
import sqlalchemy as sa
#from sqlalchemy.orm.session import Session
#from ..app.models import User

# revision identifiers, used by Alembic.
revision = '3539d79a1c0b'
down_revision = 'be1c8e33b37e'
branch_labels = None
depends_on = None


def upgrade():
    '''
    INSERT INTO `user`(`email`, `password_hash`, `created`, `permission`, `updated`) VALUES ('temp2@email.com','fakepass',CURRENT_TIMESTAMP,'admin',CURRENT_TIMESTAMP) 
        ON DUPLICATE KEY UPDATE `permission`='admin'
    INSERT INTO `user`(`email`, `password_hash`, `created`, `permission`, `updated`) VALUES ('temp2@email.com','fakepass',CURRENT_TIMESTAMP,'admin',CURRENT_TIMESTAMP)
    INSERT INTO `user`(`email`, `password_hash`, `created`, `permission`, `updated`) VALUES ('temp@email.com','fakepass',DEFAULT,'admin',DEFAULT)

    INSERT 
        INTO user ('email', 'password_hash') 
        VALUE ( 'temp@temp.com', 'fake password')
        
        on duplicate KEY UPDATE 
            'permission' = 'admin'

    INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]
      [INTO] tbl_name [PARTITION (partition_list)] [(col,...)]
      {VALUES | VALUE} ({expr | DEFAULT},...),(...),...
      [ ON DUPLICATE KEY UPDATE
        col=expr
          [, col=expr] ... ]
    '''

    # ### commands auto generated by Alembic - please adjust! ###
#    session = Session(bind=op.get_bind())
#    print(session)
#    admin = User(email='admin@admin.com')
    op.execute(
        "INSERT INTO `user`(`email`, `password_hash`, `created`, `permission`, `updated`) "
        "VALUES ('admin@syllahub.com','fakepass',CURRENT_TIMESTAMP,'admin',CURRENT_TIMESTAMP) "
            "ON DUPLICATE KEY UPDATE `permission`='admin'")    

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # No downgrade needed. 
    pass
    # ### end Alembic commands ###
